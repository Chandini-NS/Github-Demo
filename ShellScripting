21--------------------
#!/bin/bash

hour=`date +%c | tr -s " " | cut -d " " -f4 | cut -d ":" -f1`   
day=`date +%A`  
mon=`date +%B`  
dte=`date +%d`  
year=`date +%Y`  
tf=`date +%r`    
if [ $hour -ge 5 -a $hour -lt 12 ]  
then
        echo -e "Good morning `whoami`, Have nice day!\nThis is $day $dte in $mon of $year ($tf)"
elif [ $hour -ge 12 -a $hour -le 13 ]   
then
        echo -e "Good noon `whoami`, Have nice day!\nThis is $day $dte in $mon of $year ($tf)"
elif [ $hour -ge 14 -a $hour -lt 17 ]  
then
        echo -e "Good afternoon `whoami`, Have nice day!\nThis is $day $dte in $mon of $year ($tf)"
elif [ $hour -ge 17 -a $hour -lt 21 ]   
then
        echo -e "Good evening `whoami`, Have nice day!\nThis is $day $dte in $mon of $year ($tf)"
elif [ $hour -ge 21 -o $hour -lt 5 ]   
then
        echo -e "Good night `whoami`, Have nice day!\nThis is $day $dte in $mon of $year ($tf)"
fi
11--------------------
#! bin/bash
echo "The Fibonacci series is : "
read N a b
for (( i=0; i<N; i++ ))
do
    echo -n "$a "
    fn=$((a + b))
    a=$b
    b=$fn
done
exit 0
8------------------------
!/bin/bash
echo "give me a number"
read a
sd=0
rev=0
while [ $a -gt 0 ]
do
sd=$(( $a % 10 ))
rev=$(( $rev * 10 + $sd ))
a=$(( $a / 10))
done
echo "reverse number of entered digit is" $rev
10--------------------
#!/bin/bash
echo "give me a number or string"
read a
i=$((${#a}-1))
echo ${a:$i:1}

12--------------------------
#!/bin/bash
echo "Chess Board"

for (( i=1; i<=8; i++))
do
        for (( j=1; j<=8; j++))
        do
                total=$(($i+$j))
                temp=$(($total%2))
                # for alternative blocks
                if [ $temp -eq 0 ]
                then
                        echo -e -n "\033[47m" " "  #white
                else
                        echo -e -n "\033[40m" " " #black
                fi
        done
        echo -e -n "\033[0m" " "
        echo ' '
done
-------------------------------
#!/bin/bash
echo " give me a number or string"
read a b c d e
n=${#a}
echo "string length is " $n
m=${#b}
echo "string length is " $m
o=${#c}
echo "string length is " $o
p=${#d}
echo "string length is " $p
q=${#e}
echo "string length is " $q
-------------------------------------
15-----------------
15

#!/bin/bash

# creating a menu with the following options
echo "SELECT YOUR FAVORITE FRUIT";
echo "1. Apple"
echo "2. Grapes"
echo "3. Mango"
echo "4. Exit from menu "
echo -n "Enter your menu choice [1-4]: "

# Running a forever loop using while statement
# This loop will run until select the exit option.
# User will be asked to select option again and again
while :
do

# reading choice
read choice

# case statement is used to compare one value with the multiple cases.
case $choice in
  # Pattern 1
  1)  echo "You have selected the option 1"
      echo "Selected Fruit is Apple. ";;
  # Pattern 2
  2)  echo "You have selected the option 2"
      echo "Selected Fruit is Grapes. ";;
  # Pattern 3
  3)  echo "You have selected the option 3"
      echo "Selected Fruit is Mango. ";;    
  # Pattern 4
  4)  echo "Quitting ..."
      exit;;
  # Default Pattern
  *) echo "invalid option";;
  
esac
  echo -n "Enter your menu choice [1-4]: "
done
14-------------------------------------
#!/bin/bash
echo "give 5 number and orderd or underderd array"
read a b c d e f g

arr=($a $b $c $d $e)

echo "Array in original order"
echo ${arr[*]}

for ((i = 0; i<5; i++))
do

    for((j = 0; j<5-i-1; j++))
    do

        if [ ${arr[j]} -gt ${arr[$((j+1))]} ]
        then
            # swap
            temp=${arr[j]}
            arr[$j]=${arr[$((j+1))]}
            arr[$((j+1))]=$temp
        fi
    done
done

echo "Array in sorted order :"
echo ${arr[*]}

echo "Array in sorted order :"
echo ${arr[*]} | rev
24------------------------------------
if [ $# -eq 1 ]  
then
	if [ -d $1 ]  
	then
		swps=(`find $1 -name "*.swp" -type f`)  
		if [ ${#swps[@]} -ne 0 ]  
		then
			find $1 -name "*.swp" -type f -delete   
		else
			echo "No swp files found in test_swp."
		fi
	else
		echo "Error : '$1' no such a file or directory"
	fi
else
	swps=(`find ~ -name "*.swp" -type f`)  
	if [ ${#swps[@]} -ne 0 ]  
	then
		echo "swap file found :"
		find ~ -name "*.swp" -type f  
	fi
fi

